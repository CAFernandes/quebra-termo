/* eslint-disable react-hooks/exhaustive-deps */
import type { NextPage } from "next";
import { useState, useEffect } from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [words, setWords] = useState<string[]>([]);
  const [wordsfiltered, setWordsfiltered] = useState<string[]>([]);
  const [letterExist, setLetterExist] = useState<string>("");
  const [letterOne, setLetterOne] = useState<string>("");
  const [letterTwo, setLetterTwo] = useState<string>("");
  const [letterThree, setLetterThree] = useState<string>("");
  const [letterFour, setLetterFour] = useState<string>("");
  const [letterFive, setLetterFive] = useState<string>("");
  const [excludeLetters, setExcludeLetters] = useState<string>("");

  function removerLetrasNaoUsadas() {
    if (!excludeLetters) return words;

    return words.filter((word) => {
      const hasLetters = excludeLetters.split("").map((letter) => {
        return word.toLowerCase().search(letter.toLowerCase()) !== -1;
      });
      if (!hasLetters.includes(true)) return word;
    });
  }
  function filterByPosition(): string[] {
    const filtered = removerLetrasNaoUsadas();
    if (!letterOne && !letterTwo && !letterThree && !letterFour && !letterFive)
      return filtered;
    return filtered.filter((word) => {
      let letters = [letterOne, letterTwo, letterThree, letterFour, letterFive];

      const hasLetters = letters.map(
        (letter, index) =>{
          if (letter.trim().length == 1) {
            return word.toLowerCase().at(index) == letter.toLowerCase()
          }
        }
      );

      if (!hasLetters.includes(false)) return word;
    });
  }
  function filterWords() {
    const filtered = filterByPosition();

    if (!letterExist) {
      setWordsfiltered(filtered);
      return;
    }
    const letters = letterExist.split("");
    setWordsfiltered(
      filtered.filter((word) => {
        const hasLetters = letters.map((letter) =>
          word.toLowerCase().search(letter.toLowerCase())
        );
        return !hasLetters.includes(-1);
      })
    );
  }

  useEffect(() => {
    fetch("api/words")
      .then((response) => response.json())
      .then((data) => {
        setWords(data);
        setWordsfiltered(data);
      })
      .catch((err) => console.error(err));
  }, []);
  useEffect(() => {
    filterWords();
  }, [
    letterExist,
    excludeLetters,
    letterOne,
    letterTwo,
    letterThree,
    letterFour,
    letterFive,
  ]);
  return (
    <div className={styles.container}>
      <Head>
        <title>Quebra-Termo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.header}>
          <h1>Quebra Termo</h1>
          <p>
            Coloque as letras que foram encontradas como existentes para
            encontrar as possibilidades de solução
          </p>
        </div>
        <div className={styles.tabs}>
          <div className={styles.words}>
            <div>
              <h2>Letras Encontradas &rarr;</h2>
              <p>Só buscar palavras que contenham essas letras</p>
              <input
                type="text"
                placeholder=""
                max-length="5"
                onKeyUp={(e) => setLetterExist(e.target.value)}
              />
            </div>
            <div>
              <h2>Remover Letras &rarr;</h2>
              <p>Não incluir palavras que contenham</p>
              <input
                type="text"
                placeholder=""
                max-length="5"
                onKeyUp={(e) => setExcludeLetters(e.target.value)}
              />
            </div>
          </div>
          <div >
            <h2>Letras por posição &rarr;</h2>
            <p>Buscar letras em posições especifícas das palavras</p>
            <div className={styles.positions}>
              <div className={styles.card}>
                <strong>Letra 1:</strong>
                <input
                  type="text"
                  placeholder=""
                  max-length="1"
                  id="0"
                  onKeyUp={(e) => setLetterOne(e.target.value)}
                />
              </div>
              <div className={styles.card}>
                <strong>Letra 2:</strong>
                <input
                  type="text"
                  id="2"
                  placeholder=""
                  max-length="1"
                  onKeyUp={(e) => setLetterTwo(e.target.value)}
                />
              </div>
              <div className={styles.card}>
                <strong>Letra 3:</strong>
                <input
                  type="text"
                  id="3"
                  placeholder=""
                  max-length="1"
                  onKeyUp={(e) => setLetterThree(e.target.value)}
                />
              </div>
              <div className={styles.card}>
                <strong>Letra 4:</strong>
                <input
                  type="text"
                  id="4"
                  placeholder=""
                  max-length="1"
                  onKeyUp={(e) => setLetterFour(e.target.value)}
                />
              </div>
              <div className={styles.card}>
                <strong>Letra 5:</strong>
                <input
                  type="text"
                  id="5"
                  placeholder=""
                  max-length="1"
                  onKeyUp={(e) => setLetterFive(e.target.value)}
                />
              </div>
            </div>
          </div>
        </div>

        <div className={styles.container}>
          <h2>Resultado(s) [{wordsfiltered.length}] &rarr;</h2>
          <div className={styles.grid}>
            {wordsfiltered.map((word) => (
              <div className={styles.tabs} key={word}>
                {word}
              </div>
            ))}
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
